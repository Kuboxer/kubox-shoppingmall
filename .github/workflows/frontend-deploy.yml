name: Deploy Frontend to S3

on:
  push:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build React app
      id: build-app
      run: |
        cd frontend
        npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_USER_API_URL: ${{ secrets.REACT_APP_USER_API_URL }}
        REACT_APP_PRODUCT_API_URL: ${{ secrets.REACT_APP_PRODUCT_API_URL }}
        REACT_APP_ORDER_API_URL: ${{ secrets.REACT_APP_ORDER_API_URL }}
        REACT_APP_PAYMENT_API_URL: ${{ secrets.REACT_APP_PAYMENT_API_URL }}
        REACT_APP_CART_API_URL: ${{ secrets.REACT_APP_CART_API_URL }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to S3 (Safe Mode)
      id: deploy-s3
      run: |
        cd frontend
        # React ÎπåÎìú ÌååÏùºÎßå ÏóÖÎ°úÎìú, images Ìè¥ÎçîÎäî Ï†úÏô∏ÌïòÍ≥† ÏÇ≠Ï†ú
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete --exclude="images/*"

    - name: Notify S3 Deployment Completion
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        custom_payload: |
          {
            text: "üåê Frontend Successfully Deployed to S3",
            attachments: [{
              color: "good",
              fields: [{
                title: "Repository",
                value: "${{ github.repository }}",
                short: true
              }, {
                title: "Branch",
                value: "${{ github.ref_name }}",
                short: true
              }, {
                title: "Commit",
                value: "${{ github.sha }}".substring(0, 7),
                short: true
              }, {
                title: "S3 Bucket",
                value: "${{ secrets.S3_BUCKET_NAME }}",
                short: true
              }, {
                title: "Deployment Status",
                value: "‚úÖ Build and S3 sync completed successfully",
                short: false
              }]
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    - name: Invalidate CloudFront (optional)
      run: |
        echo "CloudFront invalidation can be added here if needed"

  # Ï†ÑÏ≤¥ ÏõåÌÅ¨ÌîåÎ°úÏö∞ Í≤∞Í≥º ÏïåÎ¶º
  notification:
    name: Notification
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [deploy]
    steps:
      - uses: martialonline/workflow-status@v3
        id: check
      - name: Final Workflow Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ steps.check.outputs.status }}
          author_name: Github Action Bot
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
