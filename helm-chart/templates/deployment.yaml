# {{- range $serviceName, $config := .Values.services }}
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ $config.name }}
#   namespace: {{ $.Values.global.namespace }}
# spec:
#   replicas: {{ $config.replicas }}
#   selector:
#     matchLabels:
#       app: {{ $config.name }}
#   template:
#     metadata:
#       labels:
#         app: {{ $config.name }}
#     spec:
#       serviceAccountName: {{ $.Values.global.serviceAccount }}
#       containers:
#       - name: {{ $config.name }}
#         image: {{ $.Values.global.imageRegistry }}/{{ $config.image.repository }}:{{ $config.image.tag }}
#         imagePullPolicy: Always
#         ports:
#         - containerPort: {{ $config.port }}
#           name: http
#         {{- if $config.secrets }}
#         envFrom:
#         {{- range $config.secrets }}
#         - secretRef:
#             name: {{ . }}
#         {{- end }}
#         {{- end }}
#         {{- if $config.env }}
#         env:
#         {{- range $key, $value := $config.env }}
#         - name: {{ $key }}
#           value: {{ $value | quote }}
#         {{- end }}
#         {{- end }}
#         {{- if $.Values.secretsStore.enabled }}
#         volumeMounts:
#         - name: secrets-store
#           mountPath: {{ $.Values.secretsStore.mountPath }}
#           readOnly: true
#         {{- end }}
#         startupProbe:
#           httpGet:
#             path: {{ $.Values.healthCheck.path }}
#             port: {{ $config.port }}
#           periodSeconds: {{ $.Values.healthCheck.startupProbe.periodSeconds }}
#           failureThreshold: {{ $.Values.healthCheck.startupProbe.failureThreshold }}
#           timeoutSeconds: {{ $.Values.healthCheck.startupProbe.timeoutSeconds }}
#           initialDelaySeconds: {{ $.Values.healthCheck.startupProbe.initialDelaySeconds }}
#         livenessProbe:
#           httpGet:
#             path: {{ $.Values.healthCheck.path }}
#             port: {{ $config.port }}
#           periodSeconds: {{ $.Values.healthCheck.livenessProbe.periodSeconds }}
#           timeoutSeconds: {{ $.Values.healthCheck.livenessProbe.timeoutSeconds }}
#           failureThreshold: {{ $.Values.healthCheck.livenessProbe.failureThreshold }}
#         readinessProbe:
#           httpGet:
#             path: {{ $.Values.healthCheck.path }}
#             port: {{ $config.port }}
#           periodSeconds: {{ $.Values.healthCheck.readinessProbe.periodSeconds }}
#           timeoutSeconds: {{ $.Values.healthCheck.readinessProbe.timeoutSeconds }}
#           failureThreshold: {{ $.Values.healthCheck.readinessProbe.failureThreshold }}
#         resources:
#           requests:
#             memory: {{ $.Values.resources.requests.memory }}
#             cpu: {{ $.Values.resources.requests.cpu }}
#           limits:
#             memory: {{ $.Values.resources.limits.memory }}
#             cpu: {{ $.Values.resources.limits.cpu }}
#       {{- if $.Values.secretsStore.enabled }}
#       volumes:
#       - name: secrets-store
#         csi:
#           driver: secrets-store.csi.k8s.io
#           readOnly: true
#           volumeAttributes:
#             secretProviderClass: {{ $.Values.secretsStore.secretProviderClass }}
#       {{- end }}
# {{- end }}
