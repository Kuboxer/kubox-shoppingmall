server.port=8080
spring.application.name=user-service

# MySQL Database 
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/user_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Redis 설정
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT 설정
jwt.secret=${JWT_SECRET_KEY}
jwt.expiration=${JWT_EXPIRATION}

# Actuator 설정
management.endpoints.web.exposure.include=health,circuitbreakers
management.endpoint.health.show-details=always

# Circuit Breaker 설정
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.default.slidingWindowSize=10
resilience4j.circuitbreaker.instances.default.minimumNumberOfCalls=5

# Timeout 설정
resilience4j.timelimiter.instances.default.timeoutDuration=3s

# Retry 설정
resilience4j.retry.instances.default.maxAttempts=3
resilience4j.retry.instances.default.waitDuration=1s

